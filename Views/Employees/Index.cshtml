@*@model IEnumerable<Merca_Darius_ExamenNew.Models.Employees>*@
@model PaginatedList<LibraryModel.Models.Employees>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@*Adaugare buton--------------------------------------------*@
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by title: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
@*--------------------------------------------------------- *@
<table class="table">
    <thead>
        <tr>
            <th>
                @* @Html.DisplayNameFor(model => model.EmployeeName)*@
                @* <a asp-action="Index" asp-route-sortOrder="@ViewData["EmployeeNameSortParm"]">@Html.DisplayNameFor(model => model.EmployeeName)</a>*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["EmployeeNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">EmployeeName</a>
            </th>
            <th>
                @*Html.DisplayNameFor(model => model.Age)*@
                @* <a asp-action="Index" asp-route-sortOrder="@ViewData["AgeSortParm"]">@Html.DisplayNameFor(model => model.Age)</a>*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AgeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Age</a>
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.PhoneNumber)*@
                PhoneNumber
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.Email)*@
                Email
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.JobTitle)*@
                JobTitle
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Salary)*@
                Salary
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Department)*@
                Department
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JobTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Salary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a> 

