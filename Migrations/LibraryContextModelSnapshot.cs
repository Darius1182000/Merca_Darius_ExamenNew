// <auto-generated />
using System;
using LibraryModel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MercaDariusExamenNew.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Merca_Darius_ExamenNew.Models.Attendances", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AbsenceReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Attendances", (string)null);
                });

            modelBuilder.Entity("Merca_Darius_ExamenNew.Models.Departments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("Merca_Darius_ExamenNew.Models.Employees", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentsID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentsID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("Merca_Darius_ExamenNew.Models.Managers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentsID")
                        .HasColumnType("int");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentsID");

                    b.ToTable("Managers", (string)null);
                });

            modelBuilder.Entity("Merca_Darius_ExamenNew.Models.Attendances", b =>
                {
                    b.HasOne("Merca_Darius_ExamenNew.Models.Employees", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeID");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Merca_Darius_ExamenNew.Models.Employees", b =>
                {
                    b.HasOne("Merca_Darius_ExamenNew.Models.Departments", "Departments")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentsID");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Merca_Darius_ExamenNew.Models.Managers", b =>
                {
                    b.HasOne("Merca_Darius_ExamenNew.Models.Departments", "Departments")
                        .WithMany("Managers")
                        .HasForeignKey("DepartmentsID");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Merca_Darius_ExamenNew.Models.Departments", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Managers");
                });

            modelBuilder.Entity("Merca_Darius_ExamenNew.Models.Employees", b =>
                {
                    b.Navigation("Attendances");
                });
#pragma warning restore 612, 618
        }
    }
}
